
networks:
  kafka-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"  # Внешний доступ
      - "29092:29092" # Внутренний доступ для Docker-сетей
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO, kafka.producer.async.DefaultEventHandler=INFO, state.change.logger=INFO"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://$DOCKERHOST:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPIC_ENABLE: 'true'
    networks:
      - kafka-network

  eureka-server:
    image: eureka-server
    container_name: eureka-server
    build:
      context: ../Microservice-Apache-Kafka/eureka-server/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - kafka-network

  gateway:
    image: gateway
    container_name: gateway
    build:
      context: ../Microservice-Apache-Kafka/gateway/
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    networks:
      - kafka-network